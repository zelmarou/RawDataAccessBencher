//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeFluentEntities.Bencher.Production
{
    using CodeFluent.Runtime;
    using CodeFluent.Runtime.Utilities;
    
    
    // CodeFluent Entities generated (http://www.softfluent.com). Date: Tuesday, 18 March 2014 16:33.
    // Build:1.0.61214.0764
    [System.CodeDom.Compiler.GeneratedCodeAttribute("CodeFluent Entities", "1.0.61214.0764")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DataObjectAttribute()]
    [System.Diagnostics.DebuggerDisplayAttribute("EK={EntityKey}, Name={Name}")]
    [System.ComponentModel.TypeConverterAttribute(typeof(CodeFluent.Runtime.Design.NameTypeConverter))]
    public partial class Product : System.ICloneable, System.IComparable, System.IComparable<CodeFluentEntities.Bencher.Production.Product>, CodeFluent.Runtime.ICodeFluentEntity, System.ComponentModel.IDataErrorInfo, CodeFluent.Runtime.ICodeFluentMemberValidator, CodeFluent.Runtime.ICodeFluentSummaryValidator, System.IEquatable<CodeFluentEntities.Bencher.Production.Product>
    {
        
        private bool _raisePropertyChangedEvents = true;
        
        private CodeFluent.Runtime.CodeFluentEntityState _entityState;
        
        private int _productID = -1;
        
        private string _name = default(string);
        
        private string _productNumber = default(string);
        
        private bool _makeFlag = true;
        
        private bool _finishedGoodsFlag = true;
        
        private string _color = default(string);
        
        private short _safetyStockLevel = CodeFluentPersistence.DefaultInt16Value;
        
        private short _reorderPoint = CodeFluentPersistence.DefaultInt16Value;
        
        private decimal _standardCost = CodeFluentPersistence.DefaultDecimalValue;
        
        private decimal _listPrice = CodeFluentPersistence.DefaultDecimalValue;
        
        private string _size = default(string);
        
        private System.Nullable<decimal> _weight = null;
        
        private int _daysToManufacture = CodeFluentPersistence.DefaultInt32Value;
        
        private string _productLine = default(string);
        
        private string _class = default(string);
        
        private string _style = default(string);
        
        private System.DateTime _sellStartDate = CodeFluentPersistence.DefaultDateTimeValue;
        
        private System.Nullable<System.DateTime> _sellEndDate = null;
        
        private System.Nullable<System.DateTime> _discontinuedDate = null;
        
        private System.Guid _rowguid = CodeFluentPersistence.DefaultGuidValue;
        
        private System.DateTime _modifiedDate = CodeFluentPersistence.DefaultDateTimeValue;
        
        private int _productModelProductModelID = -1;
        
        [System.NonSerializedAttribute()]
        private CodeFluentEntities.Bencher.Production.ProductModel _productModel = null;
        
        private string _sizeUnitMeasureCodeUnitMeasureCode = default(string);
        
        [System.NonSerializedAttribute()]
        private CodeFluentEntities.Bencher.Production.UnitMeasure _sizeUnitMeasureCode = null;
        
        private string _weightUnitMeasureCodeUnitMeasureCode = default(string);
        
        [System.NonSerializedAttribute()]
        private CodeFluentEntities.Bencher.Production.UnitMeasure _weightUnitMeasureCode = null;
        
        private int _productSubcategoryProductSubcategoryID = -1;
        
        [System.NonSerializedAttribute()]
        private CodeFluentEntities.Bencher.Production.ProductSubcategory _productSubcategory = null;
        
        [System.NonSerializedAttribute()]
        private CodeFluentEntities.Bencher.Production.TransactionHistoryCollection _transactionHistories;
        
        [System.NonSerializedAttribute()]
        private CodeFluentEntities.Bencher.Production.ProductReviewCollection _productReviews;
        
        [System.NonSerializedAttribute()]
        private CodeFluentEntities.Bencher.Production.TransactionHistoryArchiveCollection _transactionHistoryArchives;
        
        [System.NonSerializedAttribute()]
        private CodeFluentEntities.Bencher.Production.WorkOrderCollection _workOrders;
        
        [System.NonSerializedAttribute()]
        private CodeFluentEntities.Bencher.Purchasing.PurchaseOrderDetailCollection _purchaseOrderDetails;
        
        [System.NonSerializedAttribute()]
        private CodeFluentEntities.Bencher.Sales.SalesOrderDetailCollection _salesOrderDetails;
        
        [System.NonSerializedAttribute()]
        private CodeFluentEntities.Bencher.Sales.ShoppingCartItemCollection _shoppingCartItems;
        
        public Product()
        {
            this._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created;
        }
        
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual bool RaisePropertyChangedEvents
        {
            get
            {
                return this._raisePropertyChangedEvents;
            }
            set
            {
                this._raisePropertyChangedEvents = value;
            }
        }
        
        public virtual string EntityKey
        {
            get
            {
                return this.ProductID.ToString();
            }
            set
            {
                this.ProductID = ((int)(ConvertUtilities.ChangeType(value, typeof(int), -1)));
            }
        }
        
        public virtual string EntityDisplayName
        {
            get
            {
                return this.Name;
            }
        }
        
        [System.ComponentModel.DefaultValueAttribute(((int)(-1)))]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false, Type=typeof(int))]
        [System.ComponentModel.DataObjectFieldAttribute(true)]
        public int ProductID
        {
            get
            {
                return this._productID;
            }
            set
            {
                this._productID = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ProductID"));
            }
        }
        
        [System.ComponentModel.DefaultValueAttribute(default(string))]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Type=typeof(string))]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Name"));
            }
        }
        
        [System.ComponentModel.DefaultValueAttribute(default(string))]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Type=typeof(string))]
        public string ProductNumber
        {
            get
            {
                return this._productNumber;
            }
            set
            {
                this._productNumber = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ProductNumber"));
            }
        }
        
        [System.ComponentModel.DefaultValueAttribute(((bool)(true)))]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false, Type=typeof(bool))]
        public bool MakeFlag
        {
            get
            {
                return this._makeFlag;
            }
            set
            {
                this._makeFlag = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("MakeFlag"));
            }
        }
        
        [System.ComponentModel.DefaultValueAttribute(((bool)(true)))]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false, Type=typeof(bool))]
        public bool FinishedGoodsFlag
        {
            get
            {
                return this._finishedGoodsFlag;
            }
            set
            {
                this._finishedGoodsFlag = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("FinishedGoodsFlag"));
            }
        }
        
        [System.ComponentModel.DefaultValueAttribute(default(string))]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Type=typeof(string))]
        public string Color
        {
            get
            {
                return this._color;
            }
            set
            {
                this._color = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Color"));
            }
        }
        
        [System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt16Value)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false, Type=typeof(short))]
        public short SafetyStockLevel
        {
            get
            {
                return this._safetyStockLevel;
            }
            set
            {
                this._safetyStockLevel = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("SafetyStockLevel"));
            }
        }
        
        [System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt16Value)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false, Type=typeof(short))]
        public short ReorderPoint
        {
            get
            {
                return this._reorderPoint;
            }
            set
            {
                this._reorderPoint = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ReorderPoint"));
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false, Type=typeof(decimal))]
        public decimal StandardCost
        {
            get
            {
                return this._standardCost;
            }
            set
            {
                this._standardCost = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("StandardCost"));
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false, Type=typeof(decimal))]
        public decimal ListPrice
        {
            get
            {
                return this._listPrice;
            }
            set
            {
                this._listPrice = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ListPrice"));
            }
        }
        
        [System.ComponentModel.DefaultValueAttribute(default(string))]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Type=typeof(string))]
        public string Size
        {
            get
            {
                return this._size;
            }
            set
            {
                this._size = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Size"));
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> Weight
        {
            get
            {
                return this._weight;
            }
            set
            {
                this._weight = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Weight"));
            }
        }
        
        [System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt32Value)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false, Type=typeof(int))]
        public int DaysToManufacture
        {
            get
            {
                return this._daysToManufacture;
            }
            set
            {
                this._daysToManufacture = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("DaysToManufacture"));
            }
        }
        
        [System.ComponentModel.DefaultValueAttribute(default(string))]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Type=typeof(string))]
        public string ProductLine
        {
            get
            {
                return this._productLine;
            }
            set
            {
                this._productLine = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ProductLine"));
            }
        }
        
        [System.ComponentModel.DefaultValueAttribute(default(string))]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Type=typeof(string))]
        public string Class
        {
            get
            {
                return this._class;
            }
            set
            {
                this._class = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Class"));
            }
        }
        
        [System.ComponentModel.DefaultValueAttribute(default(string))]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Type=typeof(string))]
        public string Style
        {
            get
            {
                return this._style;
            }
            set
            {
                this._style = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Style"));
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false, Type=typeof(System.DateTime))]
        public System.DateTime SellStartDate
        {
            get
            {
                return this._sellStartDate;
            }
            set
            {
                this._sellStartDate = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("SellStartDate"));
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SellEndDate
        {
            get
            {
                return this._sellEndDate;
            }
            set
            {
                this._sellEndDate = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("SellEndDate"));
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DiscontinuedDate
        {
            get
            {
                return this._discontinuedDate;
            }
            set
            {
                this._discontinuedDate = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("DiscontinuedDate"));
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false, Type=typeof(System.Guid))]
        public System.Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Rowguid"));
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false, Type=typeof(System.DateTime))]
        public System.DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ModifiedDate"));
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        [System.ComponentModel.DataObjectFieldAttribute(true)]
        public int ProductModelProductModelID
        {
            get
            {
                if (((this._productModelProductModelID == -1) 
                            && (this._productModel != null)))
                {
                    this._productModelProductModelID = this._productModel.ProductModelID;
                }
                return this._productModelProductModelID;
            }
            set
            {
                if ((System.Collections.Generic.EqualityComparer<int>.Default.Equals(value, this.ProductModelProductModelID) == true))
                {
                    return;
                }
                this._productModel = null;
                this._productModelProductModelID = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ProductModel"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ProductModelProductModelID"));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public CodeFluentEntities.Bencher.Production.ProductModel ProductModel
        {
            get
            {
                if ((this._productModel == null))
                {
                    this._productModel = CodeFluentEntities.Bencher.Production.ProductModel.Load(this._productModelProductModelID);
                }
                return this._productModel;
            }
            set
            {
                this._productModelProductModelID = -1;
                this._productModel = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ProductModel"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ProductModelProductModelID"));
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        [System.ComponentModel.DataObjectFieldAttribute(true)]
        public string SizeUnitMeasureCodeUnitMeasureCode
        {
            get
            {
                if (((this._sizeUnitMeasureCodeUnitMeasureCode == default(string)) 
                            && (this._sizeUnitMeasureCode != null)))
                {
                    this._sizeUnitMeasureCodeUnitMeasureCode = this._sizeUnitMeasureCode.UnitMeasureCode;
                }
                return this._sizeUnitMeasureCodeUnitMeasureCode;
            }
            set
            {
                if ((System.Collections.Generic.EqualityComparer<string>.Default.Equals(value, this.SizeUnitMeasureCodeUnitMeasureCode) == true))
                {
                    return;
                }
                this._sizeUnitMeasureCode = null;
                this._sizeUnitMeasureCodeUnitMeasureCode = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("SizeUnitMeasureCode"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("SizeUnitMeasureCodeUnitMeasureCode"));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public CodeFluentEntities.Bencher.Production.UnitMeasure SizeUnitMeasureCode
        {
            get
            {
                if ((this._sizeUnitMeasureCode == null))
                {
                    this._sizeUnitMeasureCode = CodeFluentEntities.Bencher.Production.UnitMeasure.Load(this._sizeUnitMeasureCodeUnitMeasureCode);
                }
                return this._sizeUnitMeasureCode;
            }
            set
            {
                this._sizeUnitMeasureCodeUnitMeasureCode = default(string);
                this._sizeUnitMeasureCode = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("SizeUnitMeasureCode"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("SizeUnitMeasureCodeUnitMeasureCode"));
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        [System.ComponentModel.DataObjectFieldAttribute(true)]
        public string WeightUnitMeasureCodeUnitMeasureCode
        {
            get
            {
                if (((this._weightUnitMeasureCodeUnitMeasureCode == default(string)) 
                            && (this._weightUnitMeasureCode != null)))
                {
                    this._weightUnitMeasureCodeUnitMeasureCode = this._weightUnitMeasureCode.UnitMeasureCode;
                }
                return this._weightUnitMeasureCodeUnitMeasureCode;
            }
            set
            {
                if ((System.Collections.Generic.EqualityComparer<string>.Default.Equals(value, this.WeightUnitMeasureCodeUnitMeasureCode) == true))
                {
                    return;
                }
                this._weightUnitMeasureCode = null;
                this._weightUnitMeasureCodeUnitMeasureCode = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("WeightUnitMeasureCode"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("WeightUnitMeasureCodeUnitMeasureCode"));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public CodeFluentEntities.Bencher.Production.UnitMeasure WeightUnitMeasureCode
        {
            get
            {
                if ((this._weightUnitMeasureCode == null))
                {
                    this._weightUnitMeasureCode = CodeFluentEntities.Bencher.Production.UnitMeasure.Load(this._weightUnitMeasureCodeUnitMeasureCode);
                }
                return this._weightUnitMeasureCode;
            }
            set
            {
                this._weightUnitMeasureCodeUnitMeasureCode = default(string);
                this._weightUnitMeasureCode = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("WeightUnitMeasureCode"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("WeightUnitMeasureCodeUnitMeasureCode"));
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        [System.ComponentModel.DataObjectFieldAttribute(true)]
        public int ProductSubcategoryProductSubcategoryID
        {
            get
            {
                if (((this._productSubcategoryProductSubcategoryID == -1) 
                            && (this._productSubcategory != null)))
                {
                    this._productSubcategoryProductSubcategoryID = this._productSubcategory.ProductSubcategoryID;
                }
                return this._productSubcategoryProductSubcategoryID;
            }
            set
            {
                if ((System.Collections.Generic.EqualityComparer<int>.Default.Equals(value, this.ProductSubcategoryProductSubcategoryID) == true))
                {
                    return;
                }
                this._productSubcategory = null;
                this._productSubcategoryProductSubcategoryID = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ProductSubcategory"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ProductSubcategoryProductSubcategoryID"));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public CodeFluentEntities.Bencher.Production.ProductSubcategory ProductSubcategory
        {
            get
            {
                if ((this._productSubcategory == null))
                {
                    this._productSubcategory = CodeFluentEntities.Bencher.Production.ProductSubcategory.Load(this._productSubcategoryProductSubcategoryID);
                }
                return this._productSubcategory;
            }
            set
            {
                this._productSubcategoryProductSubcategoryID = -1;
                this._productSubcategory = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ProductSubcategory"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ProductSubcategoryProductSubcategoryID"));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public CodeFluentEntities.Bencher.Production.TransactionHistoryCollection TransactionHistories
        {
            get
            {
                if ((this._transactionHistories == null))
                {
                    if (((this.ProductID == -1) 
                                || (this.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) == true)))
                    {
                        this._transactionHistories = new CodeFluentEntities.Bencher.Production.TransactionHistoryCollection(this);
                        return this._transactionHistories;
                    }
                    this._transactionHistories = CodeFluentEntities.Bencher.Production.TransactionHistoryCollection.LoadByProduct(this);
                }
                return this._transactionHistories;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public CodeFluentEntities.Bencher.Production.ProductReviewCollection ProductReviews
        {
            get
            {
                if ((this._productReviews == null))
                {
                    if (((this.ProductID == -1) 
                                || (this.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) == true)))
                    {
                        this._productReviews = new CodeFluentEntities.Bencher.Production.ProductReviewCollection(this);
                        return this._productReviews;
                    }
                    this._productReviews = CodeFluentEntities.Bencher.Production.ProductReviewCollection.LoadByProduct(this);
                }
                return this._productReviews;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public CodeFluentEntities.Bencher.Production.TransactionHistoryArchiveCollection TransactionHistoryArchives
        {
            get
            {
                if ((this._transactionHistoryArchives == null))
                {
                    if (((this.ProductID == -1) 
                                || (this.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) == true)))
                    {
                        this._transactionHistoryArchives = new CodeFluentEntities.Bencher.Production.TransactionHistoryArchiveCollection(this);
                        return this._transactionHistoryArchives;
                    }
                    this._transactionHistoryArchives = CodeFluentEntities.Bencher.Production.TransactionHistoryArchiveCollection.LoadByProduct(this);
                }
                return this._transactionHistoryArchives;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public CodeFluentEntities.Bencher.Production.WorkOrderCollection WorkOrders
        {
            get
            {
                if ((this._workOrders == null))
                {
                    if (((this.ProductID == -1) 
                                || (this.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) == true)))
                    {
                        this._workOrders = new CodeFluentEntities.Bencher.Production.WorkOrderCollection(null, this);
                        return this._workOrders;
                    }
                    this._workOrders = CodeFluentEntities.Bencher.Production.WorkOrderCollection.LoadByProduct(this);
                }
                return this._workOrders;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public CodeFluentEntities.Bencher.Purchasing.PurchaseOrderDetailCollection PurchaseOrderDetails
        {
            get
            {
                if ((this._purchaseOrderDetails == null))
                {
                    if (((this.ProductID == -1) 
                                || (this.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) == true)))
                    {
                        this._purchaseOrderDetails = new CodeFluentEntities.Bencher.Purchasing.PurchaseOrderDetailCollection(this);
                        return this._purchaseOrderDetails;
                    }
                    this._purchaseOrderDetails = CodeFluentEntities.Bencher.Purchasing.PurchaseOrderDetailCollection.LoadByProduct(this);
                }
                return this._purchaseOrderDetails;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public CodeFluentEntities.Bencher.Sales.SalesOrderDetailCollection SalesOrderDetails
        {
            get
            {
                if ((this._salesOrderDetails == null))
                {
                    if (((this.ProductID == -1) 
                                || (this.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) == true)))
                    {
                        this._salesOrderDetails = new CodeFluentEntities.Bencher.Sales.SalesOrderDetailCollection(this, null);
                        return this._salesOrderDetails;
                    }
                    this._salesOrderDetails = CodeFluentEntities.Bencher.Sales.SalesOrderDetailCollection.LoadByProduct(this);
                }
                return this._salesOrderDetails;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public CodeFluentEntities.Bencher.Sales.ShoppingCartItemCollection ShoppingCartItems
        {
            get
            {
                if ((this._shoppingCartItems == null))
                {
                    if (((this.ProductID == -1) 
                                || (this.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) == true)))
                    {
                        this._shoppingCartItems = new CodeFluentEntities.Bencher.Sales.ShoppingCartItemCollection(this);
                        return this._shoppingCartItems;
                    }
                    this._shoppingCartItems = CodeFluentEntities.Bencher.Sales.ShoppingCartItemCollection.LoadByProduct(this);
                }
                return this._shoppingCartItems;
            }
        }
        
        string System.ComponentModel.IDataErrorInfo.Error
        {
            get
            {
                return this.Validate(System.Globalization.CultureInfo.CurrentCulture);
            }
        }
        
        string System.ComponentModel.IDataErrorInfo.this[string columnName]
        {
            get
            {
                return CodeFluentPersistence.ValidateMember(System.Globalization.CultureInfo.CurrentCulture, this, columnName, null);
            }
        }
        
        public virtual CodeFluent.Runtime.CodeFluentEntityState EntityState
        {
            get
            {
                return this._entityState;
            }
            set
            {
                if ((System.Collections.Generic.EqualityComparer<CodeFluent.Runtime.CodeFluentEntityState>.Default.Equals(value, this.EntityState) == true))
                {
                    return;
                }
                this._entityState = value;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("EntityState"));
            }
        }
        
        [field:System.NonSerializedAttribute()]
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [field:System.NonSerializedAttribute()]
        public event CodeFluent.Runtime.CodeFluentEntityActionEventHandler EntityAction;
        
        protected virtual void OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs e)
        {
            if ((this.RaisePropertyChangedEvents == false))
            {
                return;
            }
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, e);
            }
        }
        
        protected virtual void OnEntityAction(CodeFluent.Runtime.CodeFluentEntityActionEventArgs e)
        {
            if ((this.EntityAction != null))
            {
                this.EntityAction(this, e);
            }
        }
        
        public virtual bool Equals(CodeFluentEntities.Bencher.Production.Product product)
        {
            if ((product == null))
            {
                return false;
            }
            if ((this.ProductID == -1))
            {
                return base.Equals(product);
            }
            return (this.ProductID.Equals(product.ProductID) == true);
        }
        
        public override int GetHashCode()
        {
            return this._productID;
        }
        
        public override bool Equals(object obj)
        {
            CodeFluentEntities.Bencher.Production.Product product = null;
			product = obj as CodeFluentEntities.Bencher.Production.Product;
            return this.Equals(product);
        }
        
        int System.IComparable.CompareTo(object value)
        {
            CodeFluentEntities.Bencher.Production.Product product = null;
product = value as CodeFluentEntities.Bencher.Production.Product;
            if ((product == null))
            {
                throw new System.ArgumentException("value");
            }
            int localCompareTo = this.CompareTo(product);
            return localCompareTo;
        }
        
        public virtual int CompareTo(CodeFluentEntities.Bencher.Production.Product product)
        {
            if ((product == null))
            {
                throw new System.ArgumentNullException("product");
            }
            int localCompareTo = this.ProductID.CompareTo(product.ProductID);
            return localCompareTo;
        }
        
        public virtual string Validate(System.Globalization.CultureInfo culture)
        {
            return CodeFluentPersistence.Validate(culture, this, null);
        }
        
        public virtual void Validate(System.Globalization.CultureInfo culture, System.Collections.Generic.IList<CodeFluent.Runtime.CodeFluentValidationException> results)
        {
            CodeFluent.Runtime.CodeFluentEntityActionEventArgs evt = new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Validating, true, results);
            evt.Culture = culture;
            this.OnEntityAction(evt);
            if ((evt.Cancel == true))
            {
                string externalValidate;
                if ((evt.Argument != null))
                {
                    externalValidate = evt.Argument.ToString();
                }
                else
                {
                    externalValidate = CodeFluentEntities.Bencher.Resources.Manager.GetStringWithDefault(culture, "CodeFluentEntities.Bencher.Production.Product.ExternalValidate", "Type \'CodeFluentEntities.Bencher.Production.Product\' cannot be validated.", null);
                }
                CodeFluentPersistence.AddValidationError(results, externalValidate);
            }
            CodeFluentPersistence.ValidateMember(culture, results, this, null);
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Validated, false, results));
        }
        
        public void Validate()
        {
            string var = this.Validate(System.Globalization.CultureInfo.CurrentCulture);
            if ((var != null))
            {
                throw new CodeFluent.Runtime.CodeFluentValidationException(var);
            }
        }
        
        string CodeFluent.Runtime.ICodeFluentValidator.Validate(System.Globalization.CultureInfo culture)
        {
            string localValidate = this.Validate(culture);
            return localValidate;
        }
        
        void CodeFluent.Runtime.ICodeFluentMemberValidator.Validate(System.Globalization.CultureInfo culture, string memberName, System.Collections.Generic.IList<CodeFluent.Runtime.CodeFluentValidationException> results)
        {
            this.ValidateMember(culture, memberName, results);
        }
        
        public virtual bool Delete()
        {
            bool ret = false;
            CodeFluent.Runtime.CodeFluentEntityActionEventArgs evt = new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Deleting, true);
            this.OnEntityAction(evt);
            if ((evt.Cancel == true))
            {
                return ret;
            }
            if ((this.EntityState == CodeFluent.Runtime.CodeFluentEntityState.Deleted))
            {
                return ret;
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(CodeFluentEntities.Bencher.Constants.CodeFluentEntities_BencherStoreName).Persistence;
            persistence.CreateStoredProcedureCommand("Production", "Product", "Delete");
            persistence.AddRawParameter("@ProductID", this.ProductID);
            persistence.ExecuteNonQuery();
            this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted;
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Deleted, false, false));
            ret = true;
            return ret;
        }
        
        protected virtual void ReadRecord(System.Data.IDataReader reader, CodeFluent.Runtime.CodeFluentReloadOptions options)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            if ((((options & CodeFluent.Runtime.CodeFluentReloadOptions.Properties) 
                        == 0) 
                        == false))
            {
                this._productID = CodeFluentPersistence.GetReaderValue(reader, "ProductID", ((int)(-1)));
                this._name = CodeFluentPersistence.GetReaderValue(reader, "Name", ((string)(default(string))));
                this._productNumber = CodeFluentPersistence.GetReaderValue(reader, "ProductNumber", ((string)(default(string))));
                this._makeFlag = CodeFluentPersistence.GetReaderValue(reader, "MakeFlag", ((bool)(true)));
                this._finishedGoodsFlag = CodeFluentPersistence.GetReaderValue(reader, "FinishedGoodsFlag", ((bool)(true)));
                this._color = CodeFluentPersistence.GetReaderValue(reader, "Color", ((string)(default(string))));
                this._safetyStockLevel = CodeFluentPersistence.GetReaderValue(reader, "SafetyStockLevel", ((short)(CodeFluentPersistence.DefaultInt16Value)));
                this._reorderPoint = CodeFluentPersistence.GetReaderValue(reader, "ReorderPoint", ((short)(CodeFluentPersistence.DefaultInt16Value)));
                this._standardCost = CodeFluentPersistence.GetReaderValue(reader, "StandardCost", ((decimal)(CodeFluentPersistence.DefaultDecimalValue)));
                this._listPrice = CodeFluentPersistence.GetReaderValue(reader, "ListPrice", ((decimal)(CodeFluentPersistence.DefaultDecimalValue)));
                this._size = CodeFluentPersistence.GetReaderValue(reader, "Size", ((string)(default(string))));
                this._weight = CodeFluentPersistence.GetReaderValue<decimal>(reader, "Weight");
                this._daysToManufacture = CodeFluentPersistence.GetReaderValue(reader, "DaysToManufacture", ((int)(CodeFluentPersistence.DefaultInt32Value)));
                this._productLine = CodeFluentPersistence.GetReaderValue(reader, "ProductLine", ((string)(default(string))));
                this._class = CodeFluentPersistence.GetReaderValue(reader, "Class", ((string)(default(string))));
                this._style = CodeFluentPersistence.GetReaderValue(reader, "Style", ((string)(default(string))));
                this._sellStartDate = CodeFluentPersistence.GetReaderValue(reader, "SellStartDate", ((System.DateTime)(CodeFluentPersistence.DefaultDateTimeValue)));
                this._sellEndDate = CodeFluentPersistence.GetReaderValue<System.DateTime>(reader, "SellEndDate");
                this._discontinuedDate = CodeFluentPersistence.GetReaderValue<System.DateTime>(reader, "DiscontinuedDate");
                this._rowguid = CodeFluentPersistence.GetReaderValue(reader, "rowguid", ((System.Guid)(CodeFluentPersistence.DefaultGuidValue)));
                this._modifiedDate = CodeFluentPersistence.GetReaderValue(reader, "ModifiedDate", ((System.DateTime)(CodeFluentPersistence.DefaultDateTimeValue)));
                this.ProductModelProductModelID = CodeFluentPersistence.GetReaderValue(reader, "ProductModelID", ((int)(-1)));
                this.SizeUnitMeasureCodeUnitMeasureCode = CodeFluentPersistence.GetReaderValue(reader, "SizeUnitMeasureCode", ((string)(default(string))));
                this.WeightUnitMeasureCodeUnitMeasureCode = CodeFluentPersistence.GetReaderValue(reader, "WeightUnitMeasureCode", ((string)(default(string))));
                this.ProductSubcategoryProductSubcategoryID = CodeFluentPersistence.GetReaderValue(reader, "ProductSubcategoryID", ((int)(-1)));
            }
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecord, false, false));
        }
        
        void CodeFluent.Runtime.ICodeFluentEntity.ReadRecord(System.Data.IDataReader reader)
        {
            this.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.Default);
        }
        
        protected virtual void ReadRecordOnSave(System.Data.IDataReader reader)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            this._productID = CodeFluentPersistence.GetReaderValue(reader, "ProductID", ((int)(-1)));
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecordOnSave, false, false));
        }
        
        void CodeFluent.Runtime.ICodeFluentEntity.ReadRecordOnSave(System.Data.IDataReader reader)
        {
            this.ReadRecordOnSave(reader);
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static CodeFluentEntities.Bencher.Production.Product Load(int productID)
        {
            if ((productID == -1))
            {
                return null;
            }
            CodeFluentEntities.Bencher.Production.Product product = new CodeFluentEntities.Bencher.Production.Product();
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(CodeFluentEntities.Bencher.Constants.CodeFluentEntities_BencherStoreName).Persistence;
            persistence.CreateStoredProcedureCommand("Production", "Product", "Load");
            persistence.AddRawParameter("@ProductID", productID);
            System.Data.IDataReader reader = null;
            try
            {
                reader = persistence.ExecuteReader();
                if ((reader.Read() == true))
                {
                    product.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.Default);
                    product.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                    return product;
                }
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            return null;
        }
        
        public virtual bool Reload(CodeFluent.Runtime.CodeFluentReloadOptions options)
        {
            bool ret = false;
            if ((this.ProductID == -1))
            {
                return ret;
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(CodeFluentEntities.Bencher.Constants.CodeFluentEntities_BencherStoreName).Persistence;
            persistence.CreateStoredProcedureCommand("Production", "Product", "Load");
            persistence.AddRawParameter("@ProductID", this.ProductID);
            System.Data.IDataReader reader = null;
            try
            {
                reader = persistence.ExecuteReader();
                if ((reader.Read() == true))
                {
                    this.ReadRecord(reader, options);
                    this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                    ret = true;
                }
                else
                {
                    this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted;
                }
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            return ret;
        }
        
        protected virtual bool BaseSave(bool force)
        {
            if ((this.EntityState == CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted))
            {
                this.Delete();
                return false;
            }
            CodeFluent.Runtime.CodeFluentEntityActionEventArgs evt = new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Saving, true);
            this.OnEntityAction(evt);
            if ((evt.Cancel == true))
            {
                return false;
            }
            CodeFluentPersistence.ThrowIfDeleted(this);
            this.Validate();
            if (((force == false) 
                        && (this.EntityState == CodeFluent.Runtime.CodeFluentEntityState.Unchanged)))
            {
                return false;
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(CodeFluentEntities.Bencher.Constants.CodeFluentEntities_BencherStoreName).Persistence;
            persistence.CreateStoredProcedureCommand("Production", "Product", "Save");
            persistence.AddRawParameter("@ProductID", this.ProductID);
            persistence.AddRawParameter("@Name", this.Name);
            persistence.AddRawParameter("@ProductNumber", this.ProductNumber);
            persistence.AddRawParameter("@MakeFlag", this.MakeFlag);
            persistence.AddRawParameter("@FinishedGoodsFlag", this.FinishedGoodsFlag);
            persistence.AddRawParameter("@Color", this.Color);
            persistence.AddRawParameter("@SafetyStockLevel", this.SafetyStockLevel);
            persistence.AddRawParameter("@ReorderPoint", this.ReorderPoint);
            persistence.AddRawParameter("@StandardCost", this.StandardCost);
            persistence.AddRawParameter("@ListPrice", this.ListPrice);
            persistence.AddRawParameter("@Size", this.Size);
            persistence.AddParameter("@Weight", this.Weight);
            persistence.AddRawParameter("@DaysToManufacture", this.DaysToManufacture);
            persistence.AddRawParameter("@ProductLine", this.ProductLine);
            persistence.AddRawParameter("@Class", this.Class);
            persistence.AddRawParameter("@Style", this.Style);
            persistence.AddRawParameter("@SellStartDate", this.SellStartDate);
            persistence.AddParameter("@SellEndDate", this.SellEndDate);
            persistence.AddParameter("@DiscontinuedDate", this.DiscontinuedDate);
            persistence.AddRawParameter("@rowguid", this.Rowguid);
            persistence.AddRawParameter("@ModifiedDate", this.ModifiedDate);
            persistence.AddRawParameter("@ProductModelID", this.ProductModelProductModelID);
            persistence.AddRawParameter("@SizeUnitMeasureCode", this.SizeUnitMeasureCodeUnitMeasureCode);
            persistence.AddRawParameter("@WeightUnitMeasureCode", this.WeightUnitMeasureCodeUnitMeasureCode);
            persistence.AddRawParameter("@ProductSubcategoryID", this.ProductSubcategoryProductSubcategoryID);
            System.Data.IDataReader reader = null;
            try
            {
                reader = persistence.ExecuteReader();
                if ((reader.Read() == true))
                {
                    this.ReadRecordOnSave(reader);
                }
                CodeFluentPersistence.NextResults(reader);
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Saved, false, false));
            this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
            return true;
        }
        
        public virtual bool Save()
        {
            bool localSave = this.BaseSave(false);
            return localSave;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public static bool Save(CodeFluentEntities.Bencher.Production.Product product)
        {
            if ((product == null))
            {
                return false;
            }
            bool ret = product.Save();
            return ret;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public static bool Insert(CodeFluentEntities.Bencher.Production.Product product)
        {
            bool ret = CodeFluentEntities.Bencher.Production.Product.Save(product);
            return ret;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public static bool Delete(CodeFluentEntities.Bencher.Production.Product product)
        {
            if ((product == null))
            {
                return false;
            }
            bool ret = product.Delete();
            return ret;
        }
        
        public string Trace()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            System.IO.StringWriter stringWriter = new System.IO.StringWriter(stringBuilder, System.Globalization.CultureInfo.CurrentCulture);
            System.CodeDom.Compiler.IndentedTextWriter writer = new System.CodeDom.Compiler.IndentedTextWriter(stringWriter);
            this.BaseTrace(writer);
            writer.Flush();
            ((System.IDisposable)(writer)).Dispose();
            ((System.IDisposable)(stringWriter)).Dispose();
            string sr = stringBuilder.ToString();
            return sr;
        }
        
        void CodeFluent.Runtime.ICodeFluentObject.Trace(System.CodeDom.Compiler.IndentedTextWriter writer)
        {
            this.BaseTrace(writer);
        }
        
        protected virtual void BaseTrace(System.CodeDom.Compiler.IndentedTextWriter writer)
        {
            writer.Write("[");
            writer.Write("ProductID=");
            writer.Write(this.ProductID);
            writer.Write(",");
            writer.Write("Name=");
            writer.Write(this.Name);
            writer.Write(",");
            writer.Write("ProductNumber=");
            writer.Write(this.ProductNumber);
            writer.Write(",");
            writer.Write("MakeFlag=");
            writer.Write(this.MakeFlag);
            writer.Write(",");
            writer.Write("FinishedGoodsFlag=");
            writer.Write(this.FinishedGoodsFlag);
            writer.Write(",");
            writer.Write("Color=");
            writer.Write(this.Color);
            writer.Write(",");
            writer.Write("SafetyStockLevel=");
            writer.Write(this.SafetyStockLevel);
            writer.Write(",");
            writer.Write("ReorderPoint=");
            writer.Write(this.ReorderPoint);
            writer.Write(",");
            writer.Write("StandardCost=");
            writer.Write(this.StandardCost);
            writer.Write(",");
            writer.Write("ListPrice=");
            writer.Write(this.ListPrice);
            writer.Write(",");
            writer.Write("Size=");
            writer.Write(this.Size);
            writer.Write(",");
            writer.Write("Weight=");
            writer.Write(this.Weight);
            writer.Write(",");
            writer.Write("DaysToManufacture=");
            writer.Write(this.DaysToManufacture);
            writer.Write(",");
            writer.Write("ProductLine=");
            writer.Write(this.ProductLine);
            writer.Write(",");
            writer.Write("Class=");
            writer.Write(this.Class);
            writer.Write(",");
            writer.Write("Style=");
            writer.Write(this.Style);
            writer.Write(",");
            writer.Write("SellStartDate=");
            writer.Write(this.SellStartDate);
            writer.Write(",");
            writer.Write("SellEndDate=");
            writer.Write(this.SellEndDate);
            writer.Write(",");
            writer.Write("DiscontinuedDate=");
            writer.Write(this.DiscontinuedDate);
            writer.Write(",");
            writer.Write("Rowguid=");
            writer.Write(this.Rowguid);
            writer.Write(",");
            writer.Write("ModifiedDate=");
            writer.Write(this.ModifiedDate);
            writer.Write(",");
            writer.Write("ProductModel=");
            if ((this._productModel != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._productModel)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write("_productModelProductModelID=");
            writer.Write(this._productModelProductModelID);
            writer.Write(",");
            writer.Write("SizeUnitMeasureCode=");
            if ((this._sizeUnitMeasureCode != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._sizeUnitMeasureCode)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write("_sizeUnitMeasureCodeUnitMeasureCode=");
            writer.Write(this._sizeUnitMeasureCodeUnitMeasureCode);
            writer.Write(",");
            writer.Write("WeightUnitMeasureCode=");
            if ((this._weightUnitMeasureCode != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._weightUnitMeasureCode)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write("_weightUnitMeasureCodeUnitMeasureCode=");
            writer.Write(this._weightUnitMeasureCodeUnitMeasureCode);
            writer.Write(",");
            writer.Write("ProductSubcategory=");
            if ((this._productSubcategory != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._productSubcategory)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write("_productSubcategoryProductSubcategoryID=");
            writer.Write(this._productSubcategoryProductSubcategoryID);
            writer.Write(",");
            writer.Write("TransactionHistories=");
            if ((this._transactionHistories != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._transactionHistories)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write("ProductReviews=");
            if ((this._productReviews != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._productReviews)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write("TransactionHistoryArchives=");
            if ((this._transactionHistoryArchives != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._transactionHistoryArchives)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write("WorkOrders=");
            if ((this._workOrders != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._workOrders)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write("PurchaseOrderDetails=");
            if ((this._purchaseOrderDetails != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._purchaseOrderDetails)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write("SalesOrderDetails=");
            if ((this._salesOrderDetails != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._salesOrderDetails)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write("ShoppingCartItems=");
            if ((this._shoppingCartItems != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._shoppingCartItems)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(", EntityState=");
            writer.Write(this.EntityState);
            writer.Write("]");
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static CodeFluentEntities.Bencher.Production.Product LoadByEntityKey(string key)
        {
            if ((key == string.Empty))
            {
                return null;
            }
            CodeFluentEntities.Bencher.Production.Product product;
            int var = ((int)(ConvertUtilities.ChangeType(key, typeof(int), -1)));
            product = CodeFluentEntities.Bencher.Production.Product.Load(var);
            return product;
        }
        
        protected virtual void ValidateMember(System.Globalization.CultureInfo culture, string memberName, System.Collections.Generic.IList<CodeFluent.Runtime.CodeFluentValidationException> results)
        {
        }
        
        public CodeFluentEntities.Bencher.Production.Product Clone(bool deep)
        {
            CodeFluentEntities.Bencher.Production.Product product = new CodeFluentEntities.Bencher.Production.Product();
            this.CopyTo(product, deep);
            return product;
        }
        
        public CodeFluentEntities.Bencher.Production.Product Clone()
        {
            CodeFluentEntities.Bencher.Production.Product localClone = this.Clone(true);
            return localClone;
        }
        
        object System.ICloneable.Clone()
        {
            object localClone = this.Clone();
            return localClone;
        }
        
        public virtual void CopyFrom(System.Collections.IDictionary dict, bool deep)
        {
            if ((dict == null))
            {
                throw new System.ArgumentNullException("dict");
            }
            if ((dict.Contains("ProductID") == true))
            {
                this.ProductID = ((int)(ConvertUtilities.ChangeType(dict["ProductID"], typeof(int), -1)));
            }
            if ((dict.Contains("Class") == true))
            {
                this.Class = ((string)(ConvertUtilities.ChangeType(dict["Class"], typeof(string), default(string))));
            }
            if ((dict.Contains("Style") == true))
            {
                this.Style = ((string)(ConvertUtilities.ChangeType(dict["Style"], typeof(string), default(string))));
            }
            if ((dict.Contains("ProductLine") == true))
            {
                this.ProductLine = ((string)(ConvertUtilities.ChangeType(dict["ProductLine"], typeof(string), default(string))));
            }
            if ((dict.Contains("Weight") == true))
            {
                this.Weight = ((System.Nullable<System.Decimal>)(ConvertUtilities.ChangeType(dict["Weight"], typeof(System.Nullable<System.Decimal>), null)));
            }
            if ((dict.Contains("DaysToManufacture") == true))
            {
                this.DaysToManufacture = ((int)(ConvertUtilities.ChangeType(dict["DaysToManufacture"], typeof(int), CodeFluentPersistence.DefaultInt32Value)));
            }
            if ((dict.Contains("Rowguid") == true))
            {
                this.Rowguid = ((System.Guid)(ConvertUtilities.ChangeType(dict["Rowguid"], typeof(System.Guid), CodeFluentPersistence.DefaultGuidValue)));
            }
            if ((dict.Contains("ModifiedDate") == true))
            {
                this.ModifiedDate = ((System.DateTime)(ConvertUtilities.ChangeType(dict["ModifiedDate"], typeof(System.DateTime), CodeFluentPersistence.DefaultDateTimeValue)));
            }
            if ((dict.Contains("DiscontinuedDate") == true))
            {
                this.DiscontinuedDate = ((System.Nullable<System.DateTime>)(ConvertUtilities.ChangeType(dict["DiscontinuedDate"], typeof(System.Nullable<System.DateTime>), null)));
            }
            if ((dict.Contains("SellStartDate") == true))
            {
                this.SellStartDate = ((System.DateTime)(ConvertUtilities.ChangeType(dict["SellStartDate"], typeof(System.DateTime), CodeFluentPersistence.DefaultDateTimeValue)));
            }
            if ((dict.Contains("SellEndDate") == true))
            {
                this.SellEndDate = ((System.Nullable<System.DateTime>)(ConvertUtilities.ChangeType(dict["SellEndDate"], typeof(System.Nullable<System.DateTime>), null)));
            }
            if ((dict.Contains("FinishedGoodsFlag") == true))
            {
                this.FinishedGoodsFlag = ((bool)(ConvertUtilities.ChangeType(dict["FinishedGoodsFlag"], typeof(bool), true)));
            }
            if ((dict.Contains("Color") == true))
            {
                this.Color = ((string)(ConvertUtilities.ChangeType(dict["Color"], typeof(string), default(string))));
            }
            if ((dict.Contains("MakeFlag") == true))
            {
                this.MakeFlag = ((bool)(ConvertUtilities.ChangeType(dict["MakeFlag"], typeof(bool), true)));
            }
            if ((dict.Contains("Name") == true))
            {
                this.Name = ((string)(ConvertUtilities.ChangeType(dict["Name"], typeof(string), default(string))));
            }
            if ((dict.Contains("ProductNumber") == true))
            {
                this.ProductNumber = ((string)(ConvertUtilities.ChangeType(dict["ProductNumber"], typeof(string), default(string))));
            }
            if ((dict.Contains("ListPrice") == true))
            {
                this.ListPrice = ((decimal)(ConvertUtilities.ChangeType(dict["ListPrice"], typeof(decimal), CodeFluentPersistence.DefaultDecimalValue)));
            }
            if ((dict.Contains("Size") == true))
            {
                this.Size = ((string)(ConvertUtilities.ChangeType(dict["Size"], typeof(string), default(string))));
            }
            if ((dict.Contains("StandardCost") == true))
            {
                this.StandardCost = ((decimal)(ConvertUtilities.ChangeType(dict["StandardCost"], typeof(decimal), CodeFluentPersistence.DefaultDecimalValue)));
            }
            if ((dict.Contains("SafetyStockLevel") == true))
            {
                this.SafetyStockLevel = ((short)(ConvertUtilities.ChangeType(dict["SafetyStockLevel"], typeof(short), CodeFluentPersistence.DefaultInt16Value)));
            }
            if ((dict.Contains("ReorderPoint") == true))
            {
                this.ReorderPoint = ((short)(ConvertUtilities.ChangeType(dict["ReorderPoint"], typeof(short), CodeFluentPersistence.DefaultInt16Value)));
            }
            if ((dict.Contains("WeightUnitMeasureCodeUnitMeasureCode") == true))
            {
                this.WeightUnitMeasureCodeUnitMeasureCode = ((string)(ConvertUtilities.ChangeType(dict["WeightUnitMeasureCodeUnitMeasureCode"], typeof(string), default(string))));
            }
            if ((dict.Contains("ProductSubcategoryProductSubcategoryID") == true))
            {
                this.ProductSubcategoryProductSubcategoryID = ((int)(ConvertUtilities.ChangeType(dict["ProductSubcategoryProductSubcategoryID"], typeof(int), -1)));
            }
            if ((dict.Contains("ProductModelProductModelID") == true))
            {
                this.ProductModelProductModelID = ((int)(ConvertUtilities.ChangeType(dict["ProductModelProductModelID"], typeof(int), -1)));
            }
            if ((dict.Contains("SizeUnitMeasureCodeUnitMeasureCode") == true))
            {
                this.SizeUnitMeasureCodeUnitMeasureCode = ((string)(ConvertUtilities.ChangeType(dict["SizeUnitMeasureCodeUnitMeasureCode"], typeof(string), default(string))));
            }
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.CopyFrom, false, dict));
        }
        
        public virtual void CopyTo(CodeFluentEntities.Bencher.Production.Product product, bool deep)
        {
            if ((product == null))
            {
                throw new System.ArgumentNullException("product");
            }
            product.ProductID = this.ProductID;
            product.Class = this.Class;
            product.Style = this.Style;
            product.ProductLine = this.ProductLine;
            product.Weight = this.Weight;
            product.DaysToManufacture = this.DaysToManufacture;
            product.Rowguid = this.Rowguid;
            product.ModifiedDate = this.ModifiedDate;
            product.DiscontinuedDate = this.DiscontinuedDate;
            product.SellStartDate = this.SellStartDate;
            product.SellEndDate = this.SellEndDate;
            product.FinishedGoodsFlag = this.FinishedGoodsFlag;
            product.Color = this.Color;
            product.MakeFlag = this.MakeFlag;
            product.Name = this.Name;
            product.ProductNumber = this.ProductNumber;
            product.ListPrice = this.ListPrice;
            product.Size = this.Size;
            product.StandardCost = this.StandardCost;
            product.SafetyStockLevel = this.SafetyStockLevel;
            product.ReorderPoint = this.ReorderPoint;
            product.WeightUnitMeasureCodeUnitMeasureCode = this.WeightUnitMeasureCodeUnitMeasureCode;
            product.ProductSubcategoryProductSubcategoryID = this.ProductSubcategoryProductSubcategoryID;
            product.ProductModelProductModelID = this.ProductModelProductModelID;
            product.SizeUnitMeasureCodeUnitMeasureCode = this.SizeUnitMeasureCodeUnitMeasureCode;
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, product));
        }
        
        public virtual void CopyTo(System.Collections.IDictionary dict, bool deep)
        {
            if ((dict == null))
            {
                throw new System.ArgumentNullException("dict");
            }
            dict["ProductID"] = this.ProductID;
            dict["Class"] = this.Class;
            dict["Style"] = this.Style;
            dict["ProductLine"] = this.ProductLine;
            dict["Weight"] = this.Weight;
            dict["DaysToManufacture"] = this.DaysToManufacture;
            dict["Rowguid"] = this.Rowguid;
            dict["ModifiedDate"] = this.ModifiedDate;
            dict["DiscontinuedDate"] = this.DiscontinuedDate;
            dict["SellStartDate"] = this.SellStartDate;
            dict["SellEndDate"] = this.SellEndDate;
            dict["FinishedGoodsFlag"] = this.FinishedGoodsFlag;
            dict["Color"] = this.Color;
            dict["MakeFlag"] = this.MakeFlag;
            dict["Name"] = this.Name;
            dict["ProductNumber"] = this.ProductNumber;
            dict["ListPrice"] = this.ListPrice;
            dict["Size"] = this.Size;
            dict["StandardCost"] = this.StandardCost;
            dict["SafetyStockLevel"] = this.SafetyStockLevel;
            dict["ReorderPoint"] = this.ReorderPoint;
            dict["WeightUnitMeasureCodeUnitMeasureCode"] = this.WeightUnitMeasureCodeUnitMeasureCode;
            dict["ProductSubcategoryProductSubcategoryID"] = this.ProductSubcategoryProductSubcategoryID;
            dict["ProductModelProductModelID"] = this.ProductModelProductModelID;
            dict["SizeUnitMeasureCodeUnitMeasureCode"] = this.SizeUnitMeasureCodeUnitMeasureCode;
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, dict));
        }
    }
}
